version: '3'

services:

  nginx:
    build:
      dockerfile: ./nginx/Dockerfile
      context: .
    image: nginx:latest
    ports:
      - "3000:80"
    environment:
      - NGINX_HOST=127.0.0.1
      - NGINX_PORT=80


    depends_on:
      - exam-api
      - school-api
      - student-api

  exam-api:
    build:
      dockerfile: ./exam-api/Dockerfile
      context: .
    container_name: exam-api
    volumes:
      - .:/app
    ports:
      - "8001:8001"
    environment:
      - DB_HOST=db-core
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_PORT=${DB_PORT}
    command: >
      sh -c " pip install pycommon-school-test/.
              uvicorn --app-dir exam-api src.main:app --reload --host 0.0.0.0 --port 8001"
    depends_on:
      - core
      - pycommon

  school-api:
    build:
      dockerfile: school-api/Dockerfile
      context: .
    container_name: school-api
    volumes:
      - .:/app
    ports:
      - "8002:8002"
    environment:
      - DB_HOST=db-core
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_PORT=${DB_PORT}
    command: >
      sh -c " pip install ./pycommon-school-test/.  
              uvicorn --app-dir school-api src.main:app --reload --host 0.0.0.0 --port 8002"
    depends_on:
      - core
      - pycommon

  student-api:
    build:
      dockerfile: student-api/Dockerfile
      context: .
    container_name: student-api
    volumes:
      - .:/app
    ports:
      - "8003:8003"
    environment:
      - DB_HOST=db-core
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_PORT=${DB_PORT}
    command: >
      sh -c " pip install ./pycommon-school-test/.
              uvicorn --app-dir student-api src.main:app --reload --host 0.0.0.0 --port 8003"
    depends_on:
      - core
      - pycommon

  pycommon:
    build:
      dockerfile: ./pycommon-school-test/Dockerfile
      context: .
    command: >
        sh -c "python"
    container_name: pycommon

  core:
    build:
      dockerfile: ./django-core/Dockerfile
      context: .
    command: >
      sh -c "cd django-core
            python manage.py migrate
            python manage.py runserver 0.0.0.0:8000"
    volumes:
      - .:/app
    ports:
      - "8000:8000"

    environment:
      - ALLOWED_HOSTS=*
      - CORS_ORIGIN_WHITELIST=http://localhost:8080,http://localhost:8000
      - DB_HOST=db-core
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASS=${DB_PASS}
      - DB_PORT=${DB_PORT}
    depends_on:
      - db-core

  db-core:
    image: postgres:13
    environment:
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_PASSWORD=${DB_PASS}

    ports:
      - "5433:5432"

    volumes:
      - postgres_data:/var/lib/postgresql/data/

  rabbitmq:
    image: rabbitmq:3.9.11-management-alpine
    container_name: 'rabbitmq'
    ports:
      - "5672:5672"
      - "15672:15672"
    networks:
      - app-tier

  mongo:
    image: mongo
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: root
      MONGO_INITDB_ROOT_PASSWORD: example


  redis:
    image: redis
    command: redis-server --requirepass ${REDIS_PASSWORD}
    ports:
      - "6379:6379"


volumes:
  postgres_data:

networks:
  app-tier:
    driver: bridge
